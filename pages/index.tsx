import Head from 'next/head';
import Image from 'next/image';
import randomWords from 'random-words';
import React from 'react';
import { getTokens, updateToken } from '../services/api';
import styles from '../styles/Home.module.css';
import { Token } from '../types';

const IMAGES = [
  'https://nftstorage.link/ipfs/bafybeibcz4w52zdsz4dfrmcvduwhfeexolqfzs5q2irctaqepc33yn5ty4',
  'https://nftstorage.link/ipfs/bafybeiayimusvdwocpoomjlruqazauayoge3tgncozeqxyoztoq4uq234e',
  'https://nftstorage.link/ipfs/bafybeia2slvha6qvdvbsd7k6hweu5vu6td3rkelrxdv6i4zkvq7ywgs3vq',
  'https://nftstorage.link/ipfs/bafybeiaqsilpjbzmislyfblakwnkswtajehw2fs5oqafetojvao4vloefy',
  'https://nftstorage.link/ipfs/bafybeidklnmuxkbhhuomkoxgjuhtvmheutcfdwt5bqelbmjxc5zdbn52qy',
  'https://nftstorage.link/ipfs/bafybeidpppcnwtszyuty75lygg6dsusdzial3ftu6xksnhczyk5byx2ttq',
  'https://nftstorage.link/ipfs/bafybeier3l2ycpkhngsqwoi3llzzffrjlucpxuj7icjrr7fywbjbhj7dti',
  'https://nftstorage.link/ipfs/bafybeife53zbt6jm7dxa32mdo422soxhak4ssdc7mre3ake6tjy3xfctza',
];

export default function Home() {
  const [tokens, setTokens] = React.useState<Token[]>([]);
  const [isLoading, setIsLoading] = React.useState(false);

  const fetchTokens = React.useCallback(async () => {
    const newTokens = await getTokens();
    setTokens(newTokens);
  }, []);

  const shuffleMetadata = React.useCallback(async () => {
    if (tokens.length === 0) {
      return;
    }
    try {
      setIsLoading(true);
      const randomImages = IMAGES.sort(() => 0.5 - Math.random()).slice(0, 4);
      const newTokens = tokens.map((token, idx) => {
        const newToken = { ...token };
        newToken.data.name = randomWords({ exactly: 1, join: ' ' });
        newToken.data.description = randomWords({ exactly: 2, join: ' ' });
        newToken.data.image = randomImages[idx];
        return newToken;
      });

      const updatePromises = newTokens.map((token) => updateToken(token));
      await Promise.all(updatePromises);

      await fetchTokens();
    } catch (err: any) {
      console.log(err);
    } finally {
      setIsLoading(false);
    }
  }, [fetchTokens, tokens]);

  React.useEffect(() => {
    fetchTokens();
  }, [fetchTokens]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Dynamic Metadata Example</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Dynamic Metadata Example</h1>

        <p className={styles.description}>NFTs</p>

        <div className={styles.grid}>
          {tokens.map((token) => (
            <a
              key={token.id}
              target="_blank"
              href={`${process.env.NEXT_PUBLIC_COLLECTION_URL}/${token.tokenId}`}
              className={styles.card}
              rel="noreferrer">
              <h2>{token.data.name}</h2>
              <Image
                src={token.data.image}
                alt={token.data.name}
                width={100}
                height={100}
              />
              <p className={styles.tokenDescription}>
                {token.data.description}
              </p>
            </a>
          ))}
        </div>
        <div className={styles.container}>
          <button
            disabled={!tokens.length || isLoading}
            className={styles.button}
            onClick={shuffleMetadata}>
            {isLoading ? 'Loading...' : 'Shuffle Metadata'}
          </button>
        </div>
      </main>
    </div>
  );
}
